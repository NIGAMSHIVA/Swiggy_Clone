0. Arrow functions ()=>{} if there is curly bracket then bind it inside the return statement if not bind it will be
 undefined.


1. Jsx should return only one parent element If there Are multiple child Wrap them inside one parent.

2. You can write JS inside JSX between {} These Curly braces. 

3. Javascript variable should be called only after declaring.

4.Cross Site Scrypting(XSS) is the Attack which is done by using the feature that jsx allow any javascript code to be 
executed inside the curly braces.

5.React Components can be rendered through the <Component /> or <Component></Component>

6.React Component can also be called by {componentName()} or <componentName /> .But this wont work in render.In render 
you have to do only <componentName />

7.If you see in browser the css and app filee are named differently like namaste_react[Hash].css or js .The parcel
do this to trick the browser into thinking that this files is new ,so reload it .
therefore older version may not stick to it.

8.dsiplay:flex chnges the default axis (vertical ) to horizontal .If parent header set to dsiplay :flex
then its child will be horizontal [nav-items and logo]

9.In in-line css We generally style with JavaScript Object.

10.props are simple the are the data sent from the parent to the child component.Ther are similar to the argument to the
JS functions.

11.Config Driven UI-Config is data,data in handling the UI.Instead of writing 1000 restaurant in the UI .Do it in Data side and
and just do the map in the UI.Important example-> In food apps like Swiggy You see different offers in kolkata & diffeent in Kanpur.If the UI was not config Driven
then it would be the seperate app for seperate city.Thats why Config Driven UI is Important.

12.API-Application Programming Interface ,APIs are usually hosted on the backend/server, not written in the frontend.Frontend Request the API call and get the data.
It some times sends the data also(POST).Will discuss about this later.



14.Cloudinary Image ->Cloud based service Which help to get image online via CDN links and
Transformation in the image from the URL can also be done using URL.

15.[
  { "card": {...} },   // ✅ Valid object
  { "card": {...} },   // ✅ Valid object
]
This is the valid syntax of objects inside the Array

13.Object Destructuring-Read Something more about It I am not good in it.It is Important Dicuss with 
Rishu bhaiya Also

14. when you comment out the height, the card automatically adjusts based on its content — this is the default 
and expected behavior in CSS: height grows as per content.

15.Always have key in the React component rendering because if new  compoenent added react will re-render
every element ,but if we have unique key it will render only the new one.
Bad practise is to use index as key because if the list is order and new element is added all the order change and 
react will think every element is changed so it will re render all the elements.Ue ID as key is a good practise.

16.Ask About map and destructuring with Rishu Bhaiya.

17.Every code in react can be written in HTML/CSS/Javascript wring and using React kust make developer experience easy
and do the optimizations also.

18.useState variable should be defined inside the component,as we do in java variable are initialized inside the functions.

19.Lazy-loading is used where we have to load only after some action.For example you dont have to load all the 100 
images at one-go so you apply lazy loading which will load the images only after the scrolling.
It affect performance and speed by just presenting only visible content frst 


20.Chrome Dev tools-> preview -pretty way of representing what server sent
response-> Raw way of representing what server sent
initiator->what changes made the request call
Header->all type of information regarding the API endpoint time cross origin
payload->The message we are sending

21.So,useEffect hook useEffect(()=>{})  no this useEffect will be called every time after the component renders.But If i Put the dependency Array
[],useEffect(()=>{},[]) only on time as the component render but If i put something inside the dependency array then it wil called every time
the thing inside the dependency array changes.

22.Javascript is synchronously single threaded language,single threaded means one execution code at one time and synchronously means it block all other
while executing one code even though it feels asynchronous thanks to Browser APIs and event-loop for it.

23.Always initialize the hooks inside the components(top-level of the components) and dont initialise the hooks inside the functions,if-else and for loop.
Hooks are always initialised inside the functional component it is not allowed to use the hooks in class based component.
LifeCycle method like componentDidMount and componentWillUnmount are used inside the class based component.

24.react-router-dom is the JS library which help in routing and we import {createBrowserRouter} from the "react-router-dom" for this purpose.
react-router-dom is for client-side-routing .Client-side-routing is going to the new page without the reload.It is just going to other rooms
inside the house.But server side routing refers to going to other pages after the reload .It is like going to the other homes outside the 
house.

25.We use createBrowserRouter(function) which is in the react-router-dom library.To use it we first install npm install 
react-router-dom.From this react-router-dom We use createBrowserRouter which help in creating Routes.
createBrowserRouter accept an array of Objects,Each Object have its path and element which mean if that path is called
that element will be called.RouterProvider is a compnent which accept {router} as a prop which is defined in the 
createBrowserRouter,so we write root.render(<RouteProvider router={router}>).


26.react-router-dom also provides us errorElement which is a route config which help us to render the error component 
if the Error Happens and also it provides useRouteError(),it is a hook given by the react-router-dom Help us to give the 
object form error message to make our page dynamic to represent our error like 400 or 500.useRouteError() hook should
be used only inside the component which is rendered when the errorElement triggers

27.There are anchor tags with href which redirect to the other page ,but this is not, Cool becuase this reload the page 
When we click on it.So in React we got something called as Link to which is provided by react-router-dom,it works same as
href but it does not reload .React follows the principles of Single Page Application,where as the loading the whole page 
while using anchor tags unmounts the data...

28.useState doesnot the update the set variable instantly while it schedule the change in the status variable after the 
function ends so if we log the state value just after setting the state variable we will get the same dault value which
we have set in initalizing the state variable.useState updates are asynchronous and batched and correct to place state is
useEffect(()=>{console.log(state)},[state]).

29.There are terms like useParams() hooks given by the react-router-dom,these hooks help to extract dynamic segment 
from the URL and use it into the variable and there are terms like Link to given by the react-router-dom which
are helpful for linking something to some path without the reloading.Link is a component and to is a prop .

30.So,class based component in this we extend React.Component class and inside the  render method we return some JSX
this is basically known as Class-Based Components foe example,
class UserClass extends React.component{
  render(){
    return(

    )
  }
}.

31.npm run lint is a command to check the errors in javascript files.

32.Class-based Components are just like functional component but the props are accessed by (this) keyword,i.e
this.props.name ,props can be called without the constructor but state cannot be.Props can be called without constructor 
because React.Component has default constuctor so props use them.this keyword is necessary because it tell the curent 
component in which operations are occuring.

33.state Variable are declared inside the class-based component using 
this.state={
  count: 1;
}
and state is a big object it can hold multiple state variables like
this.state={
  count:1,
  count2:2;
}
and if you want to update the state variable you can use
this.setState({
  count:this.state.count+1,
  count2:this.state.count2+1;
})
state variables are never updated by using equal to === sign 

34.LifeCycle of ClassBased Component firstly constructor is invoked and then render is rendered and then componentDidMount
is rendered,whenever the state is changed render method is re-rendered.

35.Firstly when the DOM tree fully formed,now the componentDidMount() is mounted all the renders are done first and then
mounting occur.if there is parent A,child A & child B.
parent A constructor->Parent A render->child A constructor->Child A render->child B constructor->Child B render->
child A mount->Child B Mount-> Parent A mount.ComponentDidMount is used for the API Calls Just like the Useffect.
React does this to optimize the performance because the DOM operations are expensive so react batch the render phase of all
the child and batch the componentDidMount too.Component Update Happens In two phase , 1.Render Phase 2.Commit Phase.
Commit phase is where the DOM operation occur. In Render Phase react Built the Virtual DOM and UI Tables.

36.So react lifecycle works like firstly constructor is called and then the renders occur and after that componentDidMount()
called ,api called This is basically the mounting cycle and after that updating cycle begins,setState() called and then re-
rendering occur,and after that componentDidUpdate called and after that componentWillUnmount is called.
componentWillUnmount is basically called when we change too another component.

37.Dont ever say useEffect() just work like the componentDidMount because useEffect has the feature of calling useEffect 
everytime as the dependency array changes but for this feature in componentDidMount we have to do something like
componentDidUpdate(prevProps,prevState) if(this.state.count!===prevState.count) then do something,if more count 2 is also there
if(this.state.count!===prevState.count) ||(this.state.count2!===prevState.count2) thats why the dependency is the array
to store an array.And for cleaning you use componentWillUnmount and in useEffect you just use inside the return.

38.componentWillUnmount is used to clear the interval ,it is called when we are changing the Page.As react is Single page 
Application so the interval will continnue if we leave the page also,it can cause memory leaks.So we have to write 
clearinterval() function inside the componentWillUnmount() it is similar to write clearinterval inside the useEffect
 in the return statement

39.Single Responsibilty principle in React is the term used for term where each component should have just single responsibility
for that we use custom hooks some time ,just like useParams() where it was extracting the resId from the URL.Just like this
custom hooks which we made,do our work and we use that custom hook to give our component a feature of single-responsibility
principle.We do this because by this the code will become more testable ,reusable and maintainable.We can write testcase for 
just one component by which the component will turn out to be more testable.It is the principle taken by OOP.

40.You cant just fetch the API directly without using useEffect() because to fetch API using async you need useEffect.
React is synchronous it just render the jsx quickly will not wait for the API to be fetched.Thats why API fetching does not 
happen while rendering it happen after the component Mount. 

41.addEventListener(event,function) ,event like click ,online tell the browser's window which is the master of the browser
that if this event happens then the function will call,navigate.onLine can also be used to know if browser is online or offline
but it is not safe because sometimes if the router is connected then also it show true.window is a global object that contains
function like setTimeOut(),alert().

42.lazy is named function which we import from "react" to use where we want a functionality of loading only when it is clicked
The component is imported differently like 
const Grocery=lazy(()=>import("./component/Grocery"))
It is also known as dynamic bundling,chunking or code splitting,on demand loading or lazy Loading.Lazy is used to create 
different bundled file.There are two more important terms which are known as fallback and Suspense.Suspense is named 
component from the "react" and it is necessary because when We click the Grocery it takes some time to load,for that time to 
tell react it will take some time we use suspense and fallback to show something in the UI till it is not loading

43.There are CSS component framework which gives You pre-Built component and you can use them and dont care about the css of the
component then,Like SASS,SCSS,Chakara UI,Material UI,Styled compoenent.Tailwind CSS give you utilities to write CSS inside 
className  without leaving the HTML.Bootstrap is both CSS utility and component framework.

44.Install Tailwind from the official website go with the commands,postcssrc help the bundler to read the tailwind.for vite 
it is completely different than the other bundlers.index.css is the entry file that tell to use tailwind Features.

45.Tailwind-Css provides you classes which You use for the CSS part.for padding it is p-4,margin m-3,w-4 for width.
I have Installed an extension tailwind Intellisense which automatically tells the className for it.Therefore we dont have
to go website everytime.












